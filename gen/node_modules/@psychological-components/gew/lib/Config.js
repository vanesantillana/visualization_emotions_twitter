import { Line } from "./model/Line";
export class Config {
    constructor(config) {
        this.R = 80;
        this.labels = [
            "Involvement\nInterest",
            "Amusement\nLaughter",
            "Pride\nElation",
            "Happiness\nJoy",
            "Enjoyment\nPleasure",
            "Tenderness\nFeeling love",
            "Wonderment\nFeeling awe",
            "Feeling disburdened\nRelief",
            "Astonishment\nSuprise",
            "Longing\nNostalgia",
            "Pity\nCompassion",
            "Sadness\nDespair",
            "Worry\nFear",
            "Embarrassment\nShame",
            "Guilt\nRemorse",
            "Disappointment\nRegreat",
            "Envy\nJealousy",
            "Disgust\nRepulsion",
            "Contempt\nScorn",
            "Irritation\nAnger"
        ];
        this.element = "#drawer";
        this.showLines = false;
        this.showBorder = true;
        this.headerTop = "No emotion";
        this.headerBottom = "Other emotion";
        this.showHeader = true;
        this.maxElements = 20;
        this.isMobile = false;
        this.checkedElements = [];
        this.classes = {
            mainGroup: "main_group",
            lineAxis: "line_axis",
            lineBorder: "line_border",
            line: "line",
            circlePrefix: "row_"
        };
        this.lines = [];
        Object.keys(config).forEach((key) => {
            this[key] = config[key];
        });
    }
    getElementsCount() {
        return this.labels.length;
    }
    getQuarterCount() {
        return this.getElementsCount() / 4;
    }
    getLines() {
        if (!this.lines.length) {
            // TODO KW config
            this.lines.push(new Line(10));
            this.lines.push(new Line(15));
            this.lines.push(new Line(20));
            this.lines.push(new Line(25));
            this.lines.push(new Line(30));
        }
        return this.lines;
    }
}
